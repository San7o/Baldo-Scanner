#include "daemon/malware_db.hpp"
#include "common/logger.hpp"

#include <cstdlib>

using namespace AV;

MalwareDB::MalwareDB(std::string filename)
{
    int rc = sqlite3_open(filename.c_str(), &this->connection);
    if (rc)
    {
        Logger::Log(Enums::LogLevel::ERROR, "Can't open database: " + std::string(sqlite3_errmsg(connection)));
        sqlite3_close(connection);
    }
}

MalwareDB::~MalwareDB()
{
    sqlite3_close(this->connection);
}

void MalwareDB::fetchDB()
{
    Logger::Log(Enums::LogLevel::INFO, "Fetching malware signatures database");
    std::cout << std::flush;
    if (std::system("curl -o /tmp/signatures-latest.cvs https://bazaar.abuse.ch/export/csv/recent/") == -1)
    {
        Logger::Log(Enums::LogLevel::ERROR, "Failed to fetch malware signatures database");
    }
    Logger::Log(Enums::LogLevel::INFO, "Saved fetched database to /tmp/signatures-latest.csv");

}
